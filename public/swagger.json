{
  "openapi": "3.0.0",
  "info": {
    "title": "Backend HeroCartoon",
    "description": "This is the API documentation for the Backend HeroCartoon project.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:12345/"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "/"
        ],
        "description": "Ping and Pong",
        "responses": {
          "200": {
            "description": "Hello World message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexGetResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to get all products.",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status of the products",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "published"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductsAllResponseDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to create a product.",
        "responses": {
          "201": {
            "description": "Product created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Product object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to get a product by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to change the status of a product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of the product",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                false,
                true
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status changed successfully."
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to delete a product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully."
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/{id}/update": {
      "patch": {
        "tags": [
          "Products"
        ],
        "description": "Endpoint to update a product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Product id"
          }
        ],
        "responses": {
          "204": {
            "description": "Product updated successfully."
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Product object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to create a new user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to create a new user",
        "responses": {
          "204": {
            "description": "User created"
          },
          "400": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "User updated"
          },
          "400": {
            "description": "Username already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Endpoint to delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Login",
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "register admin",
        "responses": {
          "204": {
            "description": "Admin created"
          },
          "400": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Get user info",
        "responses": {
          "200": {
            "description": "User info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/choices/": {
      "get": {
        "tags": [
          "Choices"
        ],
        "description": "Endpoint to get all choices.",
        "responses": {
          "200": {
            "description": "Choices retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllChoicesResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Choices"
        ],
        "description": "Endpoint to create a choice.",
        "responses": {
          "201": {
            "description": "Choice created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChoiceResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Choice object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChoiceDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CreateChoiceDto"
              }
            }
          }
        }
      }
    },
    "/choices/{id}": {
      "get": {
        "tags": [
          "Choices"
        ],
        "description": "Endpoint to get choices by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Choices retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChoiceResponseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Choices"
        ],
        "description": "Update Choice by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Choice ID."
          }
        ],
        "responses": {
          "204": {
            "description": "Choices update successfully."
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Choice object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChoiceDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChoiceDto"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Choices"
        ],
        "description": "Delete Choice by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Choice ID."
          }
        ],
        "responses": {
          "204": {
            "description": "Choices delete successfully."
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings/": {
      "get": {
        "tags": [
          "Settings"
        ],
        "description": "Endpoint to get settings.",
        "responses": {
          "200": {
            "description": "Settings retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettingsDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Settings"
        ],
        "description": "Endpoint to update settings.",
        "responses": {
          "204": {
            "description": "Settings updated successfully."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsDto"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSettingsDto"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "IndexGetResponseDto": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "pong"
          }
        },
        "required": [
          "msg"
        ],
        "xml": {
          "name": "IndexGetResponseDto"
        }
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "string"
          },
          "password": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "xml": {
          "name": "CreateUserDto"
        }
      },
      "UserResponseDto": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "string"
            },
            "username": {
              "type": "string",
              "example": "string"
            },
            "created_at": {
              "type": "string",
              "example": "string"
            }
          },
          "required": [
            "id",
            "username",
            "created_at"
          ]
        },
        "xml": {
          "name": "UserResponseDto"
        }
      },
      "ErrorDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "message"
        ],
        "xml": {
          "name": "ErrorDto"
        }
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "string"
          },
          "password": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "username",
          "password"
        ],
        "xml": {
          "name": "LoginUserDto"
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "access_token"
        ],
        "xml": {
          "name": "LoginResponseDto"
        }
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "newUsername": {
            "type": "string",
            "example": "string"
          },
          "oldPassword": {
            "type": "string",
            "example": "string"
          },
          "newPassword": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "oldPassword"
        ],
        "xml": {
          "name": "UpdateUserDto"
        }
      },
      "MeResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "string"
          },
          "username": {
            "type": "string",
            "example": "string"
          },
          "created_at": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "id",
          "username",
          "created_at"
        ],
        "xml": {
          "name": "MeResponseDto"
        }
      },
      "ProductsAllResponseDto": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "string"
            },
            "name": {
              "type": "string",
              "example": "string"
            },
            "choices": {
              "type": "array",
              "items": {
                "xml": {
                  "name": "choiceresponsedto"
                },
                "$ref": "#/components/schemas/ChoiceResponseDto"
              }
            },
            "images": {
              "type": "array",
              "example": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "price": {
              "type": "number",
              "example": 10
            },
            "published_at": {
              "type": "string",
              "example": "string"
            }
          },
          "required": [
            "id",
            "name",
            "choices",
            "images",
            "price",
            "published_at"
          ]
        },
        "xml": {
          "name": "ProductsAllResponseDto"
        }
      },
      "ProductCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "price": {
            "type": "number",
            "example": 0
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "choices": {
            "type": "array",
            "example": [
              "string"
            ],
            "items": {
              "type": "string"
            }
          },
          "images": {
            "type": "array",
            "example": [
              "string"
            ],
            "items": {
              "type": "string"
            }
          },
          "published_at": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "name"
        ],
        "xml": {
          "name": "ProductCreateDto"
        }
      },
      "ProductResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "string"
          },
          "name": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "choices": {
            "type": "array",
            "items": {
              "xml": {
                "name": "choiceresponsedto"
              },
              "$ref": "#/components/schemas/ChoiceResponseDto"
            }
          },
          "images": {
            "type": "array",
            "example": [
              "string"
            ],
            "items": {
              "type": "string"
            }
          },
          "price": {
            "type": "number",
            "example": 10
          },
          "published_at": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "choices",
          "images",
          "price",
          "published_at"
        ],
        "xml": {
          "name": "ProductResponseDto"
        }
      },
      "CreateChoiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "price": {
            "type": "number",
            "example": 0
          }
        },
        "required": [
          "name",
          "price"
        ],
        "xml": {
          "name": "CreateChoiceDto"
        }
      },
      "ChoiceResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "string"
          },
          "name": {
            "type": "string",
            "example": "choice"
          },
          "price": {
            "type": "number",
            "example": 0
          },
          "created_at": {
            "type": "string",
            "example": "2021-08-08T00:00:00.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "price",
          "created_at"
        ],
        "xml": {
          "name": "ChoiceResponseDto"
        }
      },
      "UpdateChoiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "price": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "UpdateChoiceDto"
        }
      },
      "ProductUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "choices": {
            "type": "array",
            "example": [
              "string"
            ],
            "items": {
              "type": "string"
            }
          },
          "images": {
            "type": "array",
            "example": [
              "string"
            ],
            "items": {
              "type": "string"
            }
          },
          "price": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "ProductUpdateDto"
        }
      },
      "UpdateSettingsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "logo": {
            "type": "string",
            "example": "string"
          }
        },
        "xml": {
          "name": "UpdateSettingsDto"
        }
      },
      "GetSettingsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "logo": {
            "type": "string",
            "example": "string"
          }
        },
        "required": [
          "name",
          "logo"
        ],
        "xml": {
          "name": "GetSettingsDto"
        }
      },
      "AllChoicesResponseDto": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "string"
            },
            "name": {
              "type": "string",
              "example": "choice"
            },
            "price": {
              "type": "number",
              "example": 0
            },
            "created_at": {
              "type": "string",
              "example": "2021-08-08T00:00:00.000Z"
            }
          },
          "required": [
            "id",
            "name",
            "price",
            "created_at"
          ]
        },
        "xml": {
          "name": "AllChoicesResponseDto"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}